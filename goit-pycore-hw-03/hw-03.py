# –ó–∞–≤–¥–∞–Ω–Ω—è 1
# –°—Ç–≤–æ—Ä—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é get_days_from_today(date), —è–∫–∞ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–Ω—ñ–≤ –º—ñ–∂ –∑–∞–¥–∞–Ω–æ—é –¥–∞—Ç–æ—é —ñ –ø–æ—Ç–æ—á–Ω–æ—é –¥–∞—Ç–æ—é.

import datetime
from datetime import date
def get_days_from_today():
    attempts = 3
    while attempts > 0:
            date_enter = input("–í–≤–µ–¥—ñ—Ç—å –¥–∞—Ç—É —É —Ñ–æ—Ä–º–∞—Ç—ñ –†–†–†–†-–ú–ú-–î–î (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, '2020-10-09'): ") 
            try:
                parsed_date = datetime.datetime.strptime(date_enter, "%Y-%m-%d").date()
                today = datetime.datetime.today().date()
                delta = today - parsed_date
                print(f"–í–≤–µ–¥–µ–Ω–∞ –¥–∞—Ç–∞: {parsed_date}")
                print(f"–ö—ñ–ª—å–∫—ñ—Å—Ç—å –¥–Ω—ñ–≤ –º—ñ–∂ –¥–∞—Ç–∞–º–∏: {delta.days}")
                return  # –≤–∏—Ö—ñ–¥ –∑ —Ñ—É–Ω–∫—Ü—ñ—ó –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –≤–≤–µ–¥–µ–Ω–Ω—è
            except ValueError:
                attempts -= 1
                print(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç. –ó–∞–ª–∏—à–∏–ª–æ—Å—å —Å–ø—Ä–æ–±: {attempts}")
                if attempts == 0:
                    print("üî¥ –í–∏—á–µ—Ä–ø–∞–Ω–æ –≤—Å—ñ —Å–ø—Ä–æ–±–∏. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")

    get_days_from_today()

# –ó–∞–≤–¥–∞–Ω–Ω—è 2
# –í–∞–º –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é get_numbers_ticket(min, max, quantity),
# —è–∫–∞ –¥–æ–ø–æ–º–æ–∂–µ –≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –Ω–∞–±—ñ—Ä —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö –≤–∏–ø–∞–¥–∫–æ–≤–∏—Ö —á–∏—Å–µ–ª –¥–ª—è —Ç–∞–∫–∏—Ö –ª–æ—Ç–µ—Ä–µ–π.
# –í–æ–Ω–∞ –±—É–¥–µ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –Ω–∞–±—ñ—Ä —á–∏—Å–µ–ª —É –º–µ–∂–∞—Ö –∑–∞–¥–∞–Ω–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤,
# –ø—Ä–∏—á–æ–º—É –≤—Å—ñ –≤–∏–ø–∞–¥–∫–æ–≤—ñ —á–∏—Å–ª–∞ –≤ –Ω–∞–±–æ—Ä—ñ –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ.


import random

def get_numbers_ticket(min_value, max_value, quantity):
    min = 1
    max = 1000
    quantity = 5
    range_x = range(min_value, max_value + 1)
    lotary = sorted(random.sample(range_x,5))
    attempts = 5
    while attempts > 0:
        try:
            user_input = input(f"–í–≤–µ–¥—ñ—Ç—å {quantity} —á–∏—Å–µ–ª –≤—ñ–¥ {min} –¥–æ {max} —á–µ—Ä–µ–∑ –ø—Ä–æ–±—ñ–ª: ")
            user_numbers = list(map(int, user_input.strip().split()))
            if len(set(user_numbers)) != 5:
                print(f"‚ùå –ß–∏—Å–ª–∞ –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ —Ç–∞ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–≤–µ—Å—Ç–∏ —Ä—ñ–≤–Ω–æ {quantity} —á–∏—Å–µ–ª.")
                attempts -= 1
                continue
            if not all(1 <= num <= 1000 for num in user_numbers):
                print(f"‚ùå –£—Å—ñ —á–∏—Å–ª–∞ –º–∞—é—Ç—å –±—É—Ç–∏ –≤ –¥—ñ–∞–ø–∞–∑–æ–Ω—ñ –≤—ñ–¥ {min} –¥–æ {max}.")
                attempts -= 1
                continue
            user_numbers.sort()
            print(f"üéü –õ–æ—Ç–µ—Ä–µ–π–Ω–∏–π –∫–≤–∏—Ç–æ–∫: {lotary}")
            print(f" –í–∞—à—ñ —á–∏—Å–ª–∞:       {user_numbers}")
            if user_numbers == lotary:
                print(" –í—ñ—Ç–∞—î–º–æ! –í–∏ –≤–≥–∞–¥–∞–ª–∏ –≤—Å—ñ —á–∏—Å–ª–∞!")
            else:
                print(" –ù–∞ –∂–∞–ª—å, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
            return  
        except ValueError:
            print("‚ùå –í–≤–µ–¥—ñ—Ç—å —Ç—ñ–ª—å–∫–∏ —Ü—ñ–ª—ñ —á–∏—Å–ª–∞.")
            attempts -= 1

    print("üî¥ –í–∏ –≤–∏—á–µ—Ä–ø–∞–ª–∏ –≤—Å—ñ —Å–ø—Ä–æ–±–∏.")
get_numbers_ticket(1, 1000, 5)



# –ó–∞–≤–¥–∞–Ω–Ω—è 3

# –£ –≤–∞—à—ñ–π –∫–æ–º–ø–∞–Ω—ñ—ó –≤–µ–¥–µ—Ç—å—Å—è –∞–∫—Ç–∏–≤–Ω–∞ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–∞ –∫–∞–º–ø–∞–Ω—ñ—è –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é SMS-—Ä–æ–∑—Å–∏–ª–æ–∫.
# –î–ª—è —Ü—å–æ–≥–æ –≤–∏ –∑–±–∏—Ä–∞—î—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ñ –Ω–æ–º–µ—Ä–∏ –∫–ª—ñ—î–Ω—Ç—ñ–≤ —ñ–∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö,
# –∞–ª–µ —á–∞—Å—Ç–æ —Å—Ç–∏–∫–∞—î—Ç–µ—Å—è –∑ —Ç–∏–º, —â–æ –Ω–æ–º–µ—Ä–∏ –∑–∞–ø–∏—Å–∞–Ω—ñ —É —Ä—ñ–∑–Ω–∏—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö.

import re
—á = "+380508889900"
print(len(—á))

def normalize_phone(phone_number: str) -> str:
    cleaned = re.sub(r'[^\d+]', '', phone_number.strip())
    len_num_tell = 13
    if len(cleaned) == 13 and cleaned.startswith('+380'):
        return cleaned
    elif cleaned.startswith('380') and len(cleaned) == len_num_tell -1 :
        return '+' + cleaned
    elif cleaned.startswith('0') and len(cleaned) == len_num_tell -3 :
        return '+38' + cleaned
    else :
        cleaned 

raw_numbers = [
    "067\\t123 4567",
    "(095) 234-5678\\n",
    "+380 44 123 4567",
    "380501234567",
    "    +38(050)123-32-34",
    "     0503451234",
    "(050)8889900",
    "38050-111-22-22",
    "38050 111 22 11   ",
]

sanitized_numbers = [normalize_phone(num) for num in raw_numbers]
print("–ù–æ—Ä–º–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ –Ω–æ–º–µ—Ä–∏ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ –¥–ª—è SMS-—Ä–æ–∑—Å–∏–ª–∫–∏:", sanitized_numbers)

# –ó–∞–≤–¥–∞–Ω–Ω—è 4

# –£ –º–µ–∂–∞—Ö –≤–∞—à–æ—ó –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó, –≤–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î—Ç–µ –∑–∞ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—é –ø—Ä–∏–≤—ñ—Ç–∞–Ω—å –∫–æ–ª–µ–≥ –∑ –¥–Ω–µ–º –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è.
# –©–æ–± –æ–ø—Ç–∏–º—ñ–∑—É–≤–∞—Ç–∏ —Ü–µ–π –ø—Ä–æ—Ü–µ—Å, –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é get_upcoming_birthdays,
# —è–∫–∞ –¥–æ–ø–æ–º–æ–∂–µ –≤–∞–º –≤–∏–∑–Ω–∞—á–∞—Ç–∏, –∫–æ–≥–æ –∑ –∫–æ–ª–µ–≥ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø—Ä–∏–≤—ñ—Ç–∞—Ç–∏.
# –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö —É –∫–æ–≥–æ –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –≤–ø–µ—Ä–µ–¥ –Ω–∞ 7 –¥–Ω—ñ–≤ –≤–∫–ª—é—á–∞—é—á–∏ –ø–æ—Ç–æ—á–Ω–∏–π –¥–µ–Ω—å.

from datetime import datetime, timedelta, date
def get_upcoming_birthdays(users):
    today = date.today()
    end_date = today + timedelta(days=7)
    congratulations = []
    for user in users:
        birthday = datetime.strptime(user["birthday"], "%Y.%m.%d").date()
        birthday_this_year = birthday.replace(year=today.year)
        if birthday_this_year < today:
            birthday_this_year = birthday_this_year.replace(year=today.year + 1)
        if today <= birthday_this_year <= end_date:
            congr_date = birthday_this_year
            if congr_date.weekday() == 5:
                congr_date += timedelta(days=2)
            elif congr_date.weekday() == 6:
                congr_date += timedelta(days=1)
            congratulations.append({"name":user["name"],"congratulations_date":congr_date.strftime("%Y.%m.%d")})       
    return congratulations
users = [
    {"name": "John Doe", "birthday": "1985.06.16"},
    {"name": "Jane Smith", "birthday": "1990.06.22"},
    {"name": "Anna Lee", "birthday": "1992.06.28"}
]

upcoming = get_upcoming_birthdays(users)
print(upcoming)
